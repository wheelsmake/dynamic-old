{"version":3,"file":"dynamic.min.js","mappings":"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","sources":["webpack://dynamic/./src/utils.ts","webpack://dynamic/./src/template.ts","webpack://dynamic/./src/dataFlow.ts","webpack://dynamic/./src/dynamic.ts"],"sourcesContent":["/* dynamic\r\n * ©2022 LJM12914. https://github.com/openink/dynamic\r\n * Licensed under Apache 2.0 License. https://github.com/openink/dynamic/blob/main/LICENSE\r\n*/\r\nexport default (()=>{\r\n    return{\r\n        e(s :string, scope? :HTMLElement | Document) :Node[] | Node{\r\n            if(scope === undefined || !(scope instanceof HTMLElement)) scope = document;\r\n            let a :NodeList = scope.querySelectorAll(s);\r\n            if(!a.length) return [];\r\n            //note:当一个页面存在相同ID元素时不会走这里，而会返回数组，因为说好了是querySelectorAll了并且本来就不应该有重复ID，不能怪我啊\r\n            if(a.length == 1 && s.match(/^.*#[^\\s]*$/)) return a[0];\r\n            else return Array.from(a);\r\n        },\r\n        precisePop(ele :any, array :any[]) :any[] | null{\r\n            if(array.indexOf(ele) === -1) return null;\r\n            return array.splice(array.indexOf(ele), 1);\r\n        },\r\n        isDescendant(element :HTMLElement, target :HTMLElement) :boolean{\r\n            while(element.tagName != \"HTML\"){\r\n                element = element.parentNode! as HTMLElement;\r\n                if(element === target) return true; \r\n            }\r\n            return false;\r\n        },\r\n        isChild(element :HTMLElement, target :HTMLElement) :boolean{\r\n            const children = target.childNodes;\r\n            for(let i = 0; i < children.length; i++) if(element === children[i]) return true;\r\n            return false;\r\n        },\r\n        E(argument? :string, type? :string, value? :any) :never{\r\n            if(argument === undefined) throw new Error(\"An error occured.\");\r\n            else throw new Error(`Argument '${argument}' ${type ? `should be a ${type}` : \"is invalid\"}${value ? `, got ${value}` : \"\"}.`);\r\n        },\r\n        EE(message :any) :never{throw new Error(message);},\r\n        toHTML(HTML :string) :Node[]{\r\n            if(HTML === \"\" || typeof HTML != \"string\") this.E(\"HTML\", \"string\", HTML);\r\n            const ele = document.createElement(\"div\");\r\n            ele.innerHTML = HTML;\r\n            return this.getInnerNodes(ele);\r\n        },\r\n        getInnerNodes(el :Node | HTMLElement) :Node[]{\r\n            var nodes :Node[] = [];\r\n            for(let i = 0; i < el.childNodes.length; i++) nodes[i] = el.childNodes[i].cloneNode(true);\r\n            return nodes;\r\n        },\r\n        repeat(item :any, count :number) :any[]{\r\n            if(typeof count != \"number\" || count < 1) this.E(\"count\", \"number smaller than 1\", count);\r\n            var arr :any[] = [];\r\n            arr[count - 1] = \" \";\r\n            return arr.fill(item, 0, count);\r\n        },\r\n        randoma2z029(length :number) :string{\r\n            var s :string = \"\";\r\n            for(let i = 0; i < length; i++){\r\n                let r = Math.floor(Math.random() * 36);\r\n                if(r < 10) s += r;\r\n                else s += String.fromCharCode(r + 87);\r\n            }\r\n            return s;\r\n        },\r\n        //检查传入的tuid是否符合规则\r\n        checkTUID(id :string) :boolean{\r\n            const preservedIDs :string[] = [\"annotation-xml\",\"color-profile\",\"font-face\",\"font-face-src\",\"font-face-uri\",\"font-face-format\",\"font-face-name\",\"missing-glyph\"];\r\n            var isValid = !!id.match(\"^[a-z0-9][a-z0-9-]+[a-z0-9]$\");\r\n            //if(!isValid) console.warn(`The specified tuID is invalid: ${id}. Dynamic is going to generate one instead.`);\r\n            if(preservedIDs.indexOf(id) != -1) this.EE(`The specified tuID is one of the preserved element names: ${id}. See https://html.spec.whatwg.org/#valid-custom-element-name for help.`);\r\n            return isValid;\r\n        },\r\n        //生成id，abcdefgh-ijk\r\n        generateTUID() :string{\r\n            return `${this.randoma2z029(11)}-${this.randoma2z029(17)}`;\r\n        },\r\n        //递归冻结对象\r\n        constantize(obj :anyObject) :void{\r\n            Object.freeze(obj);\r\n            for(let i = 0; i < Object.keys(obj).length; i++) if(typeof obj[Object.keys(obj)[i]] == \"object\") this.constantize(obj[Object.keys(obj)[i]]);\r\n        },\r\n        //最终渲染方法，老祖宗求你别出bug\r\n        render(HTML :string | HTMLElement | HTMLCollection | HTMLElement[] | Node | NodeList | Node[], element :HTMLElement, insertAfter? :boolean, append? :boolean, disableDF? :boolean) :Node[]{\r\n            if(element.parentElement === null) this.EE(\"cannot render by '<html>' element, since it's root of document.\");\r\n            var html :Node[] = [];\r\n            if(typeof HTML == \"string\") html = this.toHTML(HTML);\r\n            else if(HTML instanceof HTMLElement || HTML instanceof Node) html[0] = HTML.cloneNode(true);\r\n            else if(HTML instanceof HTMLCollection || HTML instanceof NodeList) for(let i = 0; i < HTML.length; i++) html[i] = HTML.item(i)!.cloneNode(true);\r\n            else html = HTML;\r\n            const Rhtml = [...html].reverse(), parent = element.parentElement;\r\n            if(append === true) for(let i = 0; i < html.length; i++) element.append(html[i]);\r\n            else if(append === false) for(let i = 0; i < Rhtml.length; i++) element.prepend(Rhtml[i]);\r\n            else if(insertAfter === true){\r\n                if(!element.nextSibling) for(let i = 0; i < Rhtml.length; i++) parent!.append(Rhtml[i]);\r\n                else for(let i = 0; i < Rhtml.length; i++) parent!.insertBefore(Rhtml[i], element.nextSibling);\r\n            }\r\n            else if(insertAfter === false) for(let i = 0; i < html.length; i++) parent!.insertBefore(html[i], element);\r\n            else for(let i = 0; i < html.length; i++) element.append(html[i]);\r\n            //todo:加入作用域\r\n            return html;\r\n        },\r\n        generateDFID() :string{\r\n            return `dfid-${this.randoma2z029(24)}`;\r\n        },\r\n        //检查dfid\r\n        checkDFID(id :string) :boolean{\r\n            //todo:检查dfID是否合乎标准\r\n            return true;\r\n        },\r\n        //最终剥壳器\r\n        hatch(element :HTMLElement, remove? :boolean) :Node[]{\r\n            //note:Nodelist类型会实时同步造成不稳定的for循环，必须转换为Node[]！\r\n            const par = element.parentElement!, children :Node[] = Array.from(element.childNodes);\r\n            for(let i = 0; i < children.length; i++) par.insertBefore(children[i], element);\r\n            if(remove === true) element.remove();\r\n            return children;\r\n        }\r\n    }\r\n})();","/* dynamic\r\n * ©2022 LJM12914. https://github.com/openink/dynamic\r\n * Licensed under Apache 2.0 License. https://github.com/openink/dynamic/blob/main/LICENSE\r\n*/\r\nimport dataFlow from \"./dataFlow\";\r\nimport utils from \"./utils\";\r\ninterface registerArgs{\r\n    element :HTMLElement;\r\n    tuID? :tuID;\r\n    remove? :boolean;\r\n}\r\ninterface renderArgs{\r\n    tuID :tuID;\r\n    element :HTMLElement;\r\n    slots? :anyObject;\r\n    removeOuterElement? :boolean;\r\n    insertAfter? :boolean;\r\n    append? :boolean;\r\n    disableDF? :boolean;\r\n}\r\ninterface updateArgs{\r\n    tuID :tuID;\r\n    element :HTMLElement;\r\n}\r\nexport default class template{\r\n    #options :dynamicOptions;\r\n    #templates :templateObject[] = [];\r\n    #instances :instanceObject[] = [];\r\n    #observer :MutationObserver;\r\n    constructor(options :dynamicOptions){\r\n        this.#options = options;\r\n        this.#convertTemplate();\r\n        this.#observer = new MutationObserver(this.#observerCB);\r\n        this.#observer.observe(document.body,{\r\n            childList: true,\r\n            subtree: true\r\n        });\r\n    }\r\n    //注册模板核心方法，不用判断nodynamic dynamic了！\r\n    register(args :registerArgs) :string{\r\n        if(args.tuID !== undefined && !utils.checkTUID(args.tuID)) utils.E(\"tuID\", \"string with some limitations\", `${args.tuID}, read the documentation for help`);\r\n        else if(args.tuID === undefined) args.tuID = utils.generateTUID();\r\n        while(this.existsTUID(args.tuID)){ //碰撞处理，万一真的碰撞了怎么办……\r\n            if(this.#options && this.#options.enableAntiClash === true){\r\n                if(this.#options.clashHandler !== undefined) args.tuID = this.#options.clashHandler(\"tuID\", args, this.#getTemplateObject(args.tuID)!);\r\n                else utils.E(\"options.clashHandler\", \"Function\", this.#options.clashHandler);\r\n            }\r\n            else utils.E(\"tuID\", \"non-repetitive string\", args.tuID);\r\n        }\r\n        const tem :templateObject = {\r\n            id: args.tuID,\r\n            content: args.element.cloneNode(true) as HTMLElement\r\n        };\r\n        this.#templates.push(tem);\r\n        if(args.remove === true) args.element.remove();\r\n        return args.tuID;\r\n    }\r\n    //超级核心方法todo:添加渲染限制\r\n    render(args :renderArgs) :Node[] | undefined/*hack:ts不认utils.E的never类型，只能加undefined了*/{\r\n        for(let i = 0; i < this.#templates.length; i++){\r\n            if(this.#templates[i].id === args.tuID){\r\n                const content = this.#templates[i].content.cloneNode(true);\r\n                //slots变量替换\r\n                if(content instanceof HTMLElement) this.#parseSlots(content, args.slots);\r\n                var nodes :Node[] = [];\r\n                if(args.removeOuterElement === true) nodes = utils.getInnerNodes(content);\r\n                else nodes[0] = content;\r\n                return utils.render(nodes, args.element, args.insertAfter, args.append, args.disableDF);\r\n            }\r\n        }\r\n        utils.E(\"tuID\", \"valid ID that exists\", args.tuID);\r\n    }\r\n    update(args :updateArgs) :HTMLElement | null{\r\n        for(let i = 0; i < this.#templates.length; i++) if(this.#templates[i].id === args.tuID){\r\n            if(args.element instanceof HTMLElement){\r\n                const oldContent = this.#templates[i].content;\r\n                this.#templates[i].content = args.element;\r\n                return oldContent;\r\n            }\r\n            else utils.E(\"element\", \"HTMLElement\", args.element);\r\n        }\r\n        return null;\r\n    }\r\n    delete(tuID :tuID) :HTMLElement | null{\r\n        for(let i = 0; i < this.#templates.length; i++) if(this.#templates[i].id === tuID){\r\n            let content = this.#templates[i].content;\r\n            this.#templates.splice(i, 1);\r\n            return content;\r\n        }\r\n        return null;\r\n    }\r\n    getContent(tuID :tuID) :HTMLElement | null{\r\n        for(let i = 0; i < this.#templates.length; i++) if(this.#templates[i].id === tuID) return this.#templates[i].content;\r\n        return null;\r\n    }\r\n    existsTUID(tuID :tuID) :boolean{\r\n        for(let i = 0; i < this.#templates.length; i++) if(this.#templates[i].id === tuID) return true;\r\n        return false;\r\n    }\r\n    existsElement(element :HTMLElement) :string | null{\r\n        for(let i = 0; i < this.#templates.length; i++) if(this.#templates[i].content.isEqualNode(element)) return this.#templates[i].id;\r\n        return null;\r\n    }\r\n    //获取所有模板\r\n    getTemplates() :templateObject[]{return this.#templates;}\r\n    getInstance(tuID :tuID) /*:instanceObject | instanceObject[]*/{\r\n        //todo:传入tuid，获取已实例化的模板列表\r\n        /*return [{\r\n            reference: ,\r\n            slots:[\r\n\r\n            ]\r\n        }];*/\r\n    }\r\n    #parseSlots = (target :HTMLElement, argSlots? :anyObject) :void=>{\r\n        const slots = utils.e(\"slot\", target) as HTMLSlotElement[]; //用非id的css选择器就一定返回Node[]\r\n        //console.log(slots);\r\n        for(let j in argSlots) if(argSlots[j] === undefined) delete argSlots[j];  //预先把魔法字扔掉，可以省复杂度\r\n        if(argSlots !== undefined && slots.length != 0) for(let i = 0; i < slots.length; i++){ //用一个attribute比遍整个args.slot\r\n            const attr = slots[i].getAttribute(\"name\"), isHTMLSlot = slots[i].getAttribute(\"html\") === \"\";\r\n            if(attr === null || attr === \"\") continue;\r\n            for(let j in argSlots) if(j === attr){\r\n                const content = argSlots[j];\r\n                //if(content === undefined) continue; //魔法字 //预先扔掉省复杂度#L118\r\n                if(isHTMLSlot) slots[i].innerHTML = content;\r\n                else slots[i].innerText = content;\r\n            }\r\n        }\r\n        if(slots.length != 0) for(let i = 0; i < slots.length; i++){ //转换slots节点到文本节点\r\n            const par = slots[i].parentElement!;\r\n            utils.hatch(slots[i], true);\r\n            par.normalize();\r\n        }\r\n    }\r\n    #getTemplateObject = (tuID :tuID) :object | null=>{\r\n        for(let i = 0; i < this.#templates.length; i++) if(this.#templates[i].id === tuID) return this.#templates[i];\r\n        return null;\r\n    }\r\n    //observer回调方法\r\n    #observerCB = (resultList :MutationRecord[], observer :MutationObserver) :void=>{\r\n        for(let i = 0; i < resultList.length; i++) for(let j = 0; j < resultList[i].addedNodes.length; j++){\r\n            const ele = resultList[i].addedNodes[j];\r\n            if(!(ele instanceof HTMLElement)) return; //不处理文本注释节点\r\n            //template增量注册\r\n            if(ele instanceof HTMLTemplateElement/*t && ele.getAttribute(\"nodynamic\") === null //放到convertTemplate里面做，不要混乱分工*/) this.#convertTemplate(ele);\r\n            //释放tuid检测与渲染模板\r\n            if(this.getContent(ele.tagName.toLowerCase())){\r\n                //识别模板变量并插入\r\n                //const slots = utils.e(\"slots\", ele) as HTMLSlotElement[]; //note:自定义标签名元素设置的innerHTML无法使用querySelectorAll，只能遍历节点\r\n                var slots :HTMLSlotElement[] = [];\r\n                for(let i = 0; i < ele.childNodes.length; i++){\r\n                    const child = ele.childNodes[i] as Node;\r\n                    if(child instanceof HTMLElement && child.tagName === \"SLOT\") slots.push(child as HTMLSlotElement);\r\n                }\r\n                //console.log(ele.childNodes, ele.innerHTML, ele, slots);\r\n                var argSlots :anyObject = {};\r\n                for(let i = 0; i < slots.length; i++){\r\n                    const name = slots[i].getAttribute(\"name\");\r\n                    if(name === null || name === \"\") continue; //到#parseSlots后会处理这种没name的玩意\r\n                    argSlots[name] = slots[i].innerHTML; //到#parseSlots后还有个innerText挡住呢\r\n                }\r\n                //console.log(argSlots);\r\n                ele.innerHTML = \"\"; //全部清空，slots已经提取出来了\r\n                this.render({\r\n                    tuID: ele.tagName.toLowerCase(),\r\n                    element: ele,\r\n                    slots: argSlots\r\n                });\r\n                utils.hatch(ele, true);\r\n            }\r\n        }\r\n    }\r\n    //从template增量注册与起始注册混用方法，检测template声明式attribute。\r\n    #convertTemplate = (template_input? :HTMLTemplateElement) :void=>{\r\n        const goRender = (template :HTMLTemplateElement) :void=>{\r\n            if(template.getAttribute(\"nodynamic\") === null){\r\n                var tuid = template.getAttribute(\"tuid\");\r\n                if(!tuid || !utils.checkTUID(tuid)) tuid = utils.generateTUID();\r\n                //干掉template的shadow dom\r\n                const el = document.createElement(\"div\"), children = utils.getInnerNodes(template.content);\r\n                for(let i = 0; i < children.length; i++) el.appendChild(children[i]);\r\n                //提前remove掉dynamic的template\r\n                if(template.getAttribute(\"dynamic\") !== null) template.remove();\r\n                this.register({\r\n                    element: el,\r\n                    tuID: tuid,\r\n                    remove: true //这里不写是因为传入的是游离dom //argument:到底写不写？\r\n                });\r\n            }\r\n        };\r\n        if(template_input === undefined){\r\n            const templates = document.querySelectorAll(\"template\");\r\n            for(let i = 0; i < templates.length; i++) goRender(templates[i]);\r\n        }\r\n        else goRender(template_input);\r\n    }\r\n}","/* dynamic\r\n * ©2022 LJM12914. https://github.com/openink/dynamic\r\n * Licensed under Apache 2.0 License. https://github.com/openink/dynamic/blob/main/LICENSE\r\n*/\r\nimport template from \"./template\";\r\nimport utils from \"./utils\";\r\nexport default class dataFlow{\r\n    #options :dynamicOptions;\r\n    #dfScopes :HTMLElement[] = [];\r\n    #dataNodes :dataNode[] = [];\r\n    #observer :MutationObserver;\r\n    //#_ :anyObject = {};\r\n    constructor(options :dynamicOptions/*, _ :anyObject*/){\r\n        this.#options = options;\r\n        //this.#_ = _;\r\n        this.#observer = new MutationObserver(this.#observerCB);\r\n        this.#observer.observe(document.body,{\r\n            childList: true,\r\n            subtree: true\r\n        });\r\n    }\r\n    new(element :HTMLElement) :void{\r\n        //排除已经是目前作用域或目前作用域子元素的新增\r\n        for(let i = 0; i < this.#dfScopes.length; i++) if(utils.isDescendant(element, this.#dfScopes[i]) || element === this.#dfScopes[i]) return; //todo:抛出警告\r\n        //排除原数组中是新增作用域子元素的元素\r\n        for(let i = 0; i < this.#dfScopes.length; i++) if(utils.isDescendant(this.#dfScopes[i], element)) utils.precisePop(this.#dfScopes[i], this.#dfScopes);\r\n        this.#dfScopes.push(element);\r\n        this.#convertExportDataNode(element);\r\n    }\r\n    getScopes() :HTMLElement[]{ //todo:记得review一下，在学校干的\r\n        return this.#dfScopes;\r\n    }\r\n    deleteScope(identity :HTMLElement | number) :HTMLElement | null{ //todo:记得review一下，在学校干的\r\n        if(identity instanceof HTMLElement){\r\n            identity = this.#dfScopes.indexOf(identity);\r\n            if(identity == -1) return null;\r\n        }\r\n        return this.#dfScopes.splice(identity, 1)[0];\r\n    }\r\n    createDataNode(args :createDataNodeArgs){\r\n        \r\n    }\r\n    createExportDataNode() /*:string*/{\r\n        \r\n    }\r\n    connect(node1 :dataNode, node2 :dataNode){\r\n\r\n    }\r\n    #convertExportDataNode = (element :HTMLElement) :void=>{\r\n        \r\n    }\r\n    #observerCB = (resultList :MutationRecord[], observer :MutationObserver) :void=>{\r\n        //seize:\r\n    }\r\n}\r\n","/* dynamic\r\n * ©2022 LJM12914. https://github.com/openink/dynamic\r\n * Licensed under Apache 2.0 License. https://github.com/openink/dynamic/blob/main/LICENSE\r\n*/\r\nimport template from \"./template\";\r\nimport dataFlow from \"./dataFlow\";\r\nimport utils from \"./utils\";\r\ninterface renderArgs{\r\n    HTML :string | HTMLElement | HTMLCollection | Node | NodeList | Node[];\r\n    element :HTMLElement;\r\n    insertAfter? :boolean;\r\n    append? :boolean;\r\n    disableDF? :boolean;\r\n}\r\ninterface repeatArgs{\r\n    item :any;\r\n    count :number;\r\n}\r\ninterface hatchArgs{\r\n    element :HTMLElement;\r\n    remove? :boolean;\r\n}\r\nconsole.warn(\"dynamic.js ©LJM12914. https://github.com/openink/dynamic \\r\\nYou are using an unminified version of dynamic.js, which is not suitable for production use.\");\r\nclass Dynamic{\r\n    #options :dynamicOptions;\r\n    template :template;\r\n    dataFlow :dataFlow;\r\n    //_ :anyObject = {}; //没搞懂啊\r\n    constructor(options? :dynamicOptions){\r\n        console.warn(\"Creating new Dynamic instance with options\", options);\r\n        this.#options = options;\r\n        this.template = new template(this.#options);\r\n        this.dataFlow = new dataFlow(this.#options/*, this._*/);\r\n        //this.#utils = utils;\r\n    }\r\n    getOptions() :dynamicOptions{\r\n        return this.#options;\r\n    }\r\n    render(args :renderArgs) :Node[]{\r\n        //todo:添加渲染限制\r\n        return utils.render(args.HTML, args.element, args.insertAfter, args.append, args.disableDF);\r\n    }\r\n    repeat(args :repeatArgs) :any[]{\r\n        return utils.repeat(args.item, args.count);\r\n    }\r\n    e(s :string, scope? :HTMLElement | Document) :Node[] | Node{\r\n        return utils.e(s, scope);\r\n    }\r\n    toHTML(HTML :string) :Node[]{\r\n        return utils.toHTML(HTML);\r\n    }\r\n    hatch(args :hatchArgs) :Node[]{\r\n        return utils.hatch(args.element, args.remove);\r\n    }\r\n    compose(){\r\n        //todo:\r\n    }\r\n    n(args :createDataNodeArgs){\r\n        return this.dataFlow.createDataNode(args);\r\n    }\r\n}\r\nutils.constantize(Dynamic);\r\n(window as any).Dynamic = Dynamic;"],"names":["e","s","scope","undefined","HTMLElement","document","a","querySelectorAll","length","match","Array","from","precisePop","ele","array","indexOf","splice","isDescendant","element","target","tagName","parentNode","isChild","children","childNodes","i","E","argument","type","value","Error","EE","message","toHTML","HTML","this","createElement","innerHTML","getInnerNodes","el","nodes","cloneNode","repeat","item","count","arr","fill","randoma2z029","r","Math","floor","random","String","fromCharCode","checkTUID","id","isValid","generateTUID","constantize","obj","Object","freeze","keys","render","insertAfter","append","disableDF","parentElement","html","Node","HTMLCollection","NodeList","Rhtml","reverse","parent","prepend","nextSibling","insertBefore","generateDFID","checkDFID","hatch","remove","par","template","constructor","options","argSlots","slots","utils","j","attr","getAttribute","isHTMLSlot","content","innerText","normalize","tuID","resultList","observer","addedNodes","HTMLTemplateElement","getContent","toLowerCase","child","push","name","template_input","goRender","tuid","appendChild","register","templates","MutationObserver","observe","body","childList","subtree","args","existsTUID","enableAntiClash","clashHandler","tem","removeOuterElement","update","oldContent","delete","existsElement","isEqualNode","getTemplates","getInstance","dataFlow","new","getScopes","deleteScope","identity","createDataNode","createExportDataNode","connect","node1","node2","Dynamic","getOptions","compose","n","window"],"sourceRoot":""}