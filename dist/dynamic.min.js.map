{"version":3,"file":"dynamic.min.js","mappings":"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","sources":["webpack:///../utils/generic.ts","webpack:///../utils/element.ts","webpack:///./src/utils.ts","webpack:///./src/template.ts","webpack:///./src/dataFlow.ts","webpack:///./src/dynamic.ts"],"sourcesContent":["/* utils\r\n * ©2022 LJM12914. https://github.com/wheelsmake/utils\r\n * Licensed under MIT License. https://github.com/wheelsmake/utils/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"./index\";\r\nexport function randoma2Z(length :number) :string{ //52\r\n    var s :string = \"\";\r\n    for(let i = 0; i < length; i++){\r\n        let r = Math.floor(Math.random() * 52);\r\n        if(r > 25) s += String.fromCharCode(r + 71);\r\n        else s += String.fromCharCode(r + 65);\r\n    }\r\n    return s;\r\n}\r\nexport function randoma2z029(length :number) :string{ //36\r\n    var s :string = \"\";\r\n    for(let i = 0; i < length; i++){\r\n        let r = Math.floor(Math.random() * 36);\r\n        if(r < 10) s += r;\r\n        else s += String.fromCharCode(r + 87);\r\n    }\r\n    return s;\r\n}\r\nexport function precisePop(ele :any, array :any[]) :any[] | null{\r\n    if(array.indexOf(ele) === -1) return null;\r\n    return array.splice(array.indexOf(ele), 1);\r\n}\r\n//递归冻结对象\r\nexport function constantize(obj :anyObject) :void{\r\n    Object.freeze(obj);\r\n    for(let i = 0; i < Object.keys(obj).length; i++) if(typeof obj[Object.keys(obj)[i]] == \"object\") constantize(obj[Object.keys(obj)[i]]);\r\n}\r\nexport function E(argument :string, type? :string, value? :any, reason? :string) :never{\r\n    if(argument === undefined) throw new Error(\"An error occured.\");\r\n    else{\r\n        console.error(argument, type, value, reason); //为了拿到真正的value，其他类型toString后啥信息都没了\r\n        throw new Error(`Argument '${argument}' ${type ? `should be a(an) ${type}` : \"is invalid\"}${reason ? `, reason: ${reason}` : \"\"}${value ? `, got ${value}` : \"\"}.`);\r\n    }\r\n}\r\nexport function EE(message :any) :never{throw new Error(message);}\r\nexport function repeat(item :any, count :number) :any[]{\r\n    if(typeof count != \"number\" || count < 1) utils.generic.E(\"count\", \"number smaller than 1\", count);\r\n    var arr :any[] = [];\r\n    arr[count - 1] = \" \";\r\n    return arr.fill(item, 0, count);\r\n}","/* utils\r\n * ©2022 LJM12914. https://github.com/wheelsmake/utils\r\n * Licensed under MIT License. https://github.com/wheelsmake/utils/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"./index\";\r\nexport function e(s :string, scope? :Element | Document) :Node[] | Node{\r\n    if(scope === undefined || !(scope instanceof Element)) scope = document;\r\n        let a :NodeList = scope.querySelectorAll(s);\r\n        if(!a.length) return [];\r\n        //note:当一个页面存在相同ID元素时不会走这里，而会返回数组，因为说好了是querySelectorAll了并且本来就不应该有重复ID，不能怪我啊\r\n        if(a.length == 1 && s.match(/^.*#[^\\s]*$/)) return a[0];\r\n        else return Array.from(a);\r\n}\r\nexport function isDescendant(possibleDescendant :Element, possibleParent :Element) :boolean{\r\n    while(possibleDescendant.tagName != \"HTML\"){\r\n        possibleDescendant = possibleDescendant.parentNode! as Element;\r\n        if(possibleDescendant === possibleParent) return true; \r\n    }\r\n    return false;\r\n}\r\nexport function isInDocument(element :Element) :boolean{\r\n    return isDescendant(element, (e(\"html\") as Node[])[0] as Element);\r\n}\r\n/**删除 HTML 文档中因缩进而导致的文本，`\\n (数个空格)`。\r\n*/\r\nexport function removeIndentText(textNode :Text) :void{\r\n    textNode.textContent = textNode.textContent!.replace(/\\n\\s+/g, \"\");\r\n}\r\nexport function isChild(element :Element, target :Element) :boolean{\r\n    const children = target.childNodes;\r\n    for(let i = 0; i < children.length; i++) if(element === children[i]) return true;\r\n    return false;\r\n}\r\nexport function toHTML(HTML :string) :Node[]{\r\n    if(HTML === \"\" || typeof HTML != \"string\") utils.generic.E(\"HTML\", \"string\", HTML);\r\n    const ele = document.createElement(\"div\");\r\n    ele.innerHTML = HTML;\r\n    return getInnerNodes(ele);\r\n}\r\nexport function getInnerNodes(el :Node | Element) :Node[]{\r\n    var nodes :Node[] = [];\r\n    for(let i = 0; i < el.childNodes.length; i++) nodes[i] = el.childNodes[i].cloneNode(true);\r\n    return nodes;\r\n}\r\n//剥壳器\r\nexport function hatch(element :Element, remove? :boolean) :Node[]{\r\n    //note:Nodelist类型会实时同步造成不稳定的for循环，必须转换为Node[]！\r\n    const par = element.parentElement!, children :Node[] = Array.from(element.childNodes);\r\n    for(let i = 0; i < children.length; i++) par.insertBefore(children[i], element);\r\n    if(remove === true) element.remove();\r\n    return children;\r\n}\r\n//最终渲染方法，老祖宗求你别出bug\r\nexport function render(HTML :string | Element | HTMLCollection | Element[] | Node | NodeList | Node[], element :Element, insertAfter? :boolean, append? :boolean, disableDF? :boolean) :Node[]{\r\n    if(element.parentElement === null) utils.generic.EE(\"cannot render by '<html>' element, since it's root of document.\");\r\n    var html :Node[] = [];\r\n    if(typeof HTML == \"string\") html = toHTML(HTML);\r\n    else if(HTML instanceof Element || HTML instanceof Node) html[0] = HTML.cloneNode(true);\r\n    else if(HTML instanceof HTMLCollection || HTML instanceof NodeList) for(let i = 0; i < HTML.length; i++) html[i] = HTML.item(i)!.cloneNode(true);\r\n    else html = HTML;\r\n    const Rhtml = [...html].reverse(), parent = element.parentElement;\r\n    if(append === true) for(let i = 0; i < html.length; i++) element.append(html[i]);\r\n    else if(append === false) for(let i = 0; i < Rhtml.length; i++) element.prepend(Rhtml[i]);\r\n    else if(insertAfter === true){\r\n        if(!element.nextSibling) for(let i = 0; i < Rhtml.length; i++) parent!.append(Rhtml[i]);\r\n        else for(let i = 0; i < Rhtml.length; i++) parent!.insertBefore(Rhtml[i], element.nextSibling);\r\n    }\r\n    else if(insertAfter === false) for(let i = 0; i < html.length; i++) parent!.insertBefore(html[i], element);\r\n    else for(let i = 0; i < html.length; i++) element.append(html[i]);\r\n    //todo:加入作用域\r\n    return html;\r\n}","/* dynamic\r\n * ©2022 LJM12914. https://github.com/wheelsmake/dynamic\r\n * Licensed under MIT License. https://github.com/wheelsmake/dynamic/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"../../utils/index\";\r\n//检查传入的tuid是否符合规则\r\nexport function checkTUID(id :string) :boolean{\r\n    const preservedIDs :string[] = [\"annotation-xml\",\"color-profile\",\"font-face\",\"font-face-src\",\"font-face-uri\",\"font-face-format\",\"font-face-name\",\"missing-glyph\"];\r\n    var isValid = !!id.match(\"^[a-z0-9][a-z0-9-]+[a-z0-9]$\");\r\n    //if(!isValid) console.warn(`The specified tuID is invalid: ${id}. dynamic is going to generate one instead.`);\r\n    if(preservedIDs.indexOf(id) != -1) utils.generic.EE(`The specified tuID is one of the preserved element names: ${id}. See https://html.spec.whatwg.org/#valid-custom-element-name for help.`);\r\n    return isValid;\r\n}\r\n//生成id，abcdefgh-ijk\r\nexport function generateTUID() :string{\r\n    return `${utils.generic.randoma2z029(11)}-${utils.generic.randoma2z029(17)}`;\r\n}\r\nexport function generateDFID() :string{\r\n    return `dfid-${utils.generic.randoma2z029(24)}`;\r\n}\r\n//检查dfid\r\nexport function checkDFID(id :string) :boolean{\r\n    //todo:检查dfID是否合乎标准\r\n    return true;\r\n}","/* dynamic\r\n * ©2022 LJM12914. https://github.com/wheelsmake/dynamic\r\n * Licensed under MIT License. https://github.com/wheelsmake/dynamic/blob/main/LICENSE\r\n*/\r\nimport dataFlow from \"./dataFlow\";\r\nimport * as utils from \"../../utils/index\";\r\nimport * as localUtils from \"./utils\";\r\ninterface registerArgs{\r\n    element :Element;\r\n    tuID? :tuID;\r\n    remove? :boolean;\r\n}\r\ninterface renderArgs{\r\n    tuID :tuID;\r\n    element :Element;\r\n    slots? :anyObject;\r\n    removeOuterElement? :boolean;\r\n    insertAfter? :boolean;\r\n    append? :boolean;\r\n    disableDF? :boolean;\r\n}\r\ninterface updateArgs{\r\n    tuID :tuID;\r\n    element :Element;\r\n}\r\nexport default class template{\r\n    #options :dynamicOptions;\r\n    #templates :templateObject[] = [];\r\n    #instances :instanceObject[] = [];\r\n    #observer :MutationObserver;\r\n    constructor(options :dynamicOptions){\r\n        this.#options = options;\r\n        this.#convertTemplate();\r\n        this.#observer = new MutationObserver(this.#observerCB);\r\n        this.#observer.observe(document.body,{\r\n            childList: true,\r\n            subtree: true\r\n        });\r\n    }\r\n    //注册模板核心方法，不用判断nodynamic dynamic了！\r\n    register(args :registerArgs) :string{\r\n        if(args.tuID !== undefined && !localUtils.checkTUID(args.tuID)) utils.generic.E(\"tuID\", \"string with some limitations\", `${args.tuID}, read the documentation for help`);\r\n        else if(args.tuID === undefined) args.tuID = localUtils.generateTUID();\r\n        while(this.existsTUID(args.tuID)){ //碰撞处理，万一真的碰撞了怎么办……\r\n            if(this.#options && this.#options.enableAntiClash === true){\r\n                if(this.#options.clashHandler !== undefined) args.tuID = this.#options.clashHandler(\"tuID\", args, this.#getTemplateObject(args.tuID)!);\r\n                else utils.generic.E(\"options.clashHandler\", \"Function\", this.#options.clashHandler);\r\n            }\r\n            else utils.generic.E(\"tuID\", \"non-repetitive string\", args.tuID);\r\n        }\r\n        const tem :templateObject = {\r\n            id: args.tuID,\r\n            content: args.element.cloneNode(true) as Element\r\n        };\r\n        this.#templates.push(tem);\r\n        if(args.remove === true) args.element.remove();\r\n        return args.tuID;\r\n    }\r\n    //超级核心方法todo:添加渲染限制\r\n    render(args :renderArgs) :Node[] | undefined/*hack:ts不认utils.E的never类型，只能加undefined了*/{\r\n        for(let i = 0; i < this.#templates.length; i++){\r\n            if(this.#templates[i].id === args.tuID){\r\n                const content = this.#templates[i].content.cloneNode(true);\r\n                //slots变量替换\r\n                if(content instanceof Element) this.#parseSlots(content, args.slots);\r\n                var nodes :Node[] = [];\r\n                if(args.removeOuterElement === true) nodes = utils.element.getInnerNodes(content);\r\n                else nodes[0] = content;\r\n                return utils.element.render(nodes, args.element, args.insertAfter, args.append, args.disableDF);\r\n            }\r\n        }\r\n        utils.generic.E(\"tuID\", \"valid ID that exists\", args.tuID);\r\n    }\r\n    update(args :updateArgs) :Element | null{\r\n        for(let i = 0; i < this.#templates.length; i++) if(this.#templates[i].id === args.tuID){\r\n            if(args.element instanceof Element){\r\n                const oldContent = this.#templates[i].content;\r\n                this.#templates[i].content = args.element;\r\n                return oldContent;\r\n            }\r\n            else utils.generic.E(\"element\", \"Element\", args.element);\r\n        }\r\n        return null;\r\n    }\r\n    delete(tuID :tuID) :Element | null{\r\n        for(let i = 0; i < this.#templates.length; i++) if(this.#templates[i].id === tuID){\r\n            let content = this.#templates[i].content;\r\n            this.#templates.splice(i, 1);\r\n            return content;\r\n        }\r\n        return null;\r\n    }\r\n    getContent(tuID :tuID) :Element | null{\r\n        for(let i = 0; i < this.#templates.length; i++) if(this.#templates[i].id === tuID) return this.#templates[i].content;\r\n        return null;\r\n    }\r\n    existsTUID(tuID :tuID) :boolean{\r\n        for(let i = 0; i < this.#templates.length; i++) if(this.#templates[i].id === tuID) return true;\r\n        return false;\r\n    }\r\n    existsElement(element :Element) :string | null{\r\n        for(let i = 0; i < this.#templates.length; i++) if(this.#templates[i].content.isEqualNode(element)) return this.#templates[i].id;\r\n        return null;\r\n    }\r\n    //获取所有模板\r\n    getTemplates() :templateObject[]{return this.#templates;}\r\n    getInstance(tuID :tuID) /*:instanceObject | instanceObject[]*/{\r\n        //todo:传入tuid，获取已实例化的模板列表\r\n        /*return [{\r\n            reference: ,\r\n            slots:[\r\n\r\n            ]\r\n        }];*/\r\n    }\r\n    #parseSlots = (target :Element, argSlots? :anyObject) :void=>{\r\n        const slots = utils.element.e(\"slot\", target) as HTMLSlotElement[]; //用非id的css选择器就一定返回Node[]\r\n        //console.log(slots);\r\n        for(let j in argSlots) if(argSlots[j] === undefined) delete argSlots[j];  //预先把魔法字扔掉，可以省复杂度\r\n        if(argSlots !== undefined && slots.length != 0) for(let i = 0; i < slots.length; i++){ //用一个attribute比遍整个args.slot\r\n            const attr = slots[i].getAttribute(\"name\"), isHTMLSlot = slots[i].getAttribute(\"html\") === \"\";\r\n            if(attr === null || attr === \"\") continue;\r\n            for(let j in argSlots) if(j === attr){\r\n                const content = argSlots[j];\r\n                //if(content === undefined) continue; //魔法字 //预先扔掉省复杂度#L118\r\n                if(isHTMLSlot) slots[i].innerHTML = content;\r\n                else slots[i].innerText = content;\r\n            }\r\n        }\r\n        if(slots.length != 0) for(let i = 0; i < slots.length; i++){ //转换slots节点到文本节点\r\n            const par = slots[i].parentElement!;\r\n            utils.element.hatch(slots[i], true);\r\n            par.normalize();\r\n        }\r\n    }\r\n    #getTemplateObject = (tuID :tuID) :object | null=>{\r\n        for(let i = 0; i < this.#templates.length; i++) if(this.#templates[i].id === tuID) return this.#templates[i];\r\n        return null;\r\n    }\r\n    //observer回调方法\r\n    #observerCB = (resultList :MutationRecord[], observer :MutationObserver) :void=>{\r\n        for(let i = 0; i < resultList.length; i++) for(let j = 0; j < resultList[i].addedNodes.length; j++){\r\n            const ele = resultList[i].addedNodes[j];\r\n            if(!(ele instanceof Element)) return; //不处理文本注释节点\r\n            //template增量注册\r\n            if(ele instanceof HTMLTemplateElement/*t && ele.getAttribute(\"nodynamic\") === null //放到convertTemplate里面做，不要混乱分工*/) this.#convertTemplate(ele);\r\n            //释放tuid检测与渲染模板\r\n            if(this.getContent(ele.tagName.toLowerCase())){\r\n                //识别模板变量并插入\r\n                //const slots = utils.e(\"slots\", ele) as HTMLSlotElement[]; //note:自定义标签名元素设置的innerHTML无法使用querySelectorAll，只能遍历节点\r\n                var slots :HTMLSlotElement[] = [];\r\n                for(let i = 0; i < ele.childNodes.length; i++){\r\n                    const child = ele.childNodes[i] as Node;\r\n                    if(child instanceof Element && child.tagName === \"SLOT\") slots.push(child as HTMLSlotElement);\r\n                }\r\n                //console.log(ele.childNodes, ele.innerHTML, ele, slots);\r\n                var argSlots :anyObject = {};\r\n                for(let i = 0; i < slots.length; i++){\r\n                    const name = slots[i].getAttribute(\"name\");\r\n                    if(name === null || name === \"\") continue; //到#parseSlots后会处理这种没name的玩意\r\n                    argSlots[name] = slots[i].innerHTML; //到#parseSlots后还有个innerText挡住呢\r\n                }\r\n                //console.log(argSlots);\r\n                ele.innerHTML = \"\"; //全部清空，slots已经提取出来了\r\n                this.render({\r\n                    tuID: ele.tagName.toLowerCase(),\r\n                    element: ele,\r\n                    slots: argSlots\r\n                });\r\n                utils.element.hatch(ele, true);\r\n            }\r\n        }\r\n    }\r\n    //从template增量注册与起始注册混用方法，检测template声明式attribute。\r\n    #convertTemplate = (template_input? :HTMLTemplateElement) :void=>{\r\n        const goRender = (template :HTMLTemplateElement) :void=>{\r\n            if(template.getAttribute(\"nodynamic\") === null){\r\n                var tuid = template.getAttribute(\"tuid\");\r\n                if(!tuid || !localUtils.checkTUID(tuid)) tuid = localUtils.generateTUID();\r\n                //干掉template的shadow dom\r\n                const el = document.createElement(\"div\"), children = utils.element.getInnerNodes(template.content);\r\n                for(let i = 0; i < children.length; i++) el.appendChild(children[i]);\r\n                //提前remove掉dynamic的template\r\n                if(template.getAttribute(\"dynamic\") !== null) template.remove();\r\n                this.register({\r\n                    element: el,\r\n                    tuID: tuid,\r\n                    remove: true //这里不写是因为传入的是游离dom //argument:到底写不写？\r\n                });\r\n            }\r\n        };\r\n        if(template_input === undefined){\r\n            const templates = document.querySelectorAll(\"template\");\r\n            for(let i = 0; i < templates.length; i++) goRender(templates[i]);\r\n        }\r\n        else goRender(template_input);\r\n    }\r\n}","/* dynamic\r\n * ©2022 LJM12914. https://github.com/wheelsmake/dynamic\r\n * Licensed under MIT License. https://github.com/wheelsmake/dynamic/blob/main/LICENSE\r\n*/\r\nimport template from \"./template\";\r\nimport * as utils from \"../../utils/index\";\r\nimport * as localUtils from \"./utils\";\r\nexport default class dataFlow{\r\n    #options :dynamicOptions;\r\n    #dfScopes :Element[] = [];\r\n    #dataNodes :dataNode[] = [];\r\n    #observer :MutationObserver;\r\n    //#_ :anyObject = {};\r\n    constructor(options :dynamicOptions/*, _ :anyObject*/){\r\n        this.#options = options;\r\n        //this.#_ = _;\r\n        this.#observer = new MutationObserver(this.#observerCB);\r\n        this.#observer.observe(document.body,{\r\n            childList: true,\r\n            subtree: true\r\n        });\r\n    }\r\n    new(element :Element) :void{\r\n        //排除已经是目前作用域或目前作用域子元素的新增\r\n        for(let i = 0; i < this.#dfScopes.length; i++) if(utils.element.isDescendant(element, this.#dfScopes[i]) || element === this.#dfScopes[i]){\r\n            console.warn(`${element} is already a descendant of an exist scope, thus dynamic won't add it.`);\r\n            return;\r\n        }\r\n        //排除原数组中是新增作用域子元素的元素\r\n        for(let i = 0; i < this.#dfScopes.length; i++) if(utils.element.isDescendant(this.#dfScopes[i], element)) utils.generic.precisePop(this.#dfScopes[i], this.#dfScopes);\r\n        this.#dfScopes.push(element);\r\n        this.#convertExportDataNode(element);\r\n    }\r\n    getScopes() :Element[]{ //todo:记得review一下，在学校干的\r\n        return this.#dfScopes;\r\n    }\r\n    deleteScope(identity :Element | number) :Element | null{ //todo:记得review一下，在学校干的\r\n        if(identity instanceof Element){\r\n            identity = this.#dfScopes.indexOf(identity);\r\n            if(identity == -1) return null;\r\n        }\r\n        return this.#dfScopes.splice(identity, 1)[0];\r\n    }\r\n    createDataNode(args :createDataNodeArgs){\r\n        \r\n    }\r\n    createExportDataNode() /*:string*/{\r\n        \r\n    }\r\n    connect(node1 :dataNode, node2 :dataNode){\r\n\r\n    }\r\n    #convertExportDataNode = (element :Element) :void=>{\r\n        \r\n    }\r\n    #observerCB = (resultList :MutationRecord[], observer :MutationObserver) :void=>{\r\n        //seize:\r\n    }\r\n}\r\n","/* dynamic\r\n * ©2022 LJM12914. https://github.com/wheelsmake/dynamic\r\n * Licensed under MIT License. https://github.com/wheelsmake/dynamic/blob/main/LICENSE\r\n*/\r\nimport template from \"./template\";\r\nimport dataFlow from \"./dataFlow\";\r\nimport * as utils from \"../../utils/index\";\r\nimport * as localUtils from \"./utils\";\r\ninterface renderArgs{\r\n    HTML :string | Element | HTMLCollection | Node | NodeList | Node[];\r\n    element :Element;\r\n    insertAfter? :boolean;\r\n    append? :boolean;\r\n    disableDF? :boolean;\r\n}\r\ninterface repeatArgs{\r\n    item :any;\r\n    count :number;\r\n}\r\ninterface hatchArgs{\r\n    element :Element;\r\n    remove? :boolean;\r\n}\r\nconsole.warn(\"dynamic.js ©LJM12914. https://github.com/openink/dynamic \\r\\nYou are using an unminified version of dynamic.js, which is not suitable for production use.\");\r\nclass Dynamic{\r\n    #options :dynamicOptions;\r\n    template :template;\r\n    dataFlow :dataFlow;\r\n    //_ :anyObject = {}; //没搞懂啊\r\n    constructor(options? :dynamicOptions){\r\n        console.log(\"Creating new Dynamic instance with options\", options);\r\n        this.#options = options;\r\n        this.template = new template(this.#options);\r\n        this.dataFlow = new dataFlow(this.#options/*, this._*/);\r\n        //this.#utils = utils;\r\n    }\r\n    getOptions() :dynamicOptions{\r\n        return this.#options;\r\n    }\r\n    render(args :renderArgs) :Node[]{\r\n        //todo:添加渲染限制\r\n        return utils.element.render(args.HTML, args.element, args.insertAfter, args.append, args.disableDF);\r\n    }\r\n    repeat(args :repeatArgs) :any[]{\r\n        return utils.generic.repeat(args.item, args.count);\r\n    }\r\n    e(s :string, scope? :Element | Document) :Node[] | Node{\r\n        return utils.element.e(s, scope);\r\n    }\r\n    toHTML(HTML :string) :Node[]{\r\n        return utils.element.toHTML(HTML);\r\n    }\r\n    hatch(args :hatchArgs) :Node[]{\r\n        return utils.element.hatch(args.element, args.remove);\r\n    }\r\n    compose(){\r\n        //todo:\r\n    }\r\n    n(args :createDataNodeArgs){\r\n        return this.dataFlow.createDataNode(args);\r\n    }\r\n}\r\nutils.generic.constantize(Dynamic);\r\n(window as any).Dynamic = Dynamic;"],"names":["randoma2z029","length","s","i","r","Math","floor","random","String","fromCharCode","E","argument","type","value","reason","undefined","Error","EE","message","e","scope","Element","document","a","querySelectorAll","match","Array","from","isDescendant","possibleDescendant","possibleParent","tagName","parentNode","toHTML","HTML","ele","createElement","innerHTML","getInnerNodes","el","nodes","childNodes","cloneNode","hatch","element","remove","par","parentElement","children","insertBefore","render","insertAfter","append","disableDF","html","Node","HTMLCollection","NodeList","item","Rhtml","reverse","parent","prepend","nextSibling","checkTUID","id","isValid","indexOf","generateTUID","template","constructor","options","target","argSlots","slots","j","attr","getAttribute","isHTMLSlot","content","innerText","normalize","tuID","this","resultList","observer","addedNodes","HTMLTemplateElement","getContent","toLowerCase","child","push","name","template_input","goRender","tuid","appendChild","register","templates","MutationObserver","observe","body","childList","subtree","args","existsTUID","enableAntiClash","clashHandler","tem","removeOuterElement","update","oldContent","delete","splice","existsElement","isEqualNode","getTemplates","getInstance","dataFlow","new","array","getScopes","deleteScope","identity","createDataNode","createExportDataNode","connect","node1","node2","Dynamic","getOptions","repeat","count","arr","fill","compose","n","constantize","obj","Object","freeze","keys","window"],"sourceRoot":""}